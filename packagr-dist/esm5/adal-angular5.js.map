{
  "version": 3,
  "file": "adal-angular5.js",
  "sources": [
    "ng://adal-angular5/out/src/app/adal5-angular/adal5-angular.module.ts",
    "ng://adal-angular5/out/src/app/adal5-angular/adal5-user.ts",
    "ng://adal-angular5/out/src/app/adal5-angular/adal5-interceptor.ts",
    "ng://adal-angular5/out/src/app/adal5-angular/adal5-http.service.ts",
    "ng://adal-angular5/out/src/app/adal5-angular/adal5.service.ts"
  ],
  "sourcesContent": [
    "import { Adal5User } from './adal5-user';\r\nimport { Adal5Service } from './adal5.service';\r\nimport { Adal5Interceptor } from './adal5-interceptor';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Adal5HTTPService } from './adal5-http.service';\r\n\r\nexport { Adal5HTTPService } from './adal5-http.service';\r\nexport { Adal5Interceptor } from './adal5-interceptor';\r\nexport { Adal5User } from './adal5-user';\r\nexport { Adal5Service } from './adal5.service';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n})\r\nexport class Adal5AngularModule { }\r\n",
    "export class Adal5User {\r\n    authenticated: boolean;\r\n    username: string;\r\n    error: string;\r\n    profile: any;\r\n    token: string;\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Adal5Service } from './adal5.service';\r\n\r\n@Injectable()\r\nexport class Adal5Interceptor implements HttpInterceptor {\r\n    constructor(public adal5Service: Adal5Service) { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        request = request.clone({\r\n            setHeaders: {\r\n                Authorization: `Bearer ${this.adal5Service.userInfo.token}`\r\n            }\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}\r\n",
    "// tslint:disable-next-line:import-blacklist\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Adal5Service } from './adal5.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class Adal5HTTPService {\r\n\r\n    static factory(http: HttpClient, service: Adal5Service) {\r\n        return new Adal5HTTPService(http, service);\r\n    }\r\n\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private service: Adal5Service\r\n    ) { }\r\n\r\n    get(url: string, options?: {\r\n        body?: any;\r\n        headers?: HttpHeaders;\r\n        reportProgress?: boolean;\r\n        observe?: 'response';\r\n        params?: HttpParams | { [param: string]: string | string[]; };\r\n        responseType?: 'json' | 'text' | 'arraybuffer' | 'blob';\r\n        withCredentials?: boolean;\r\n    }): Observable<any> {\r\n        return this.sendRequest('get', url, options);\r\n    }\r\n\r\n    post(url: string, body: any, options?: {\r\n        body?: any;\r\n        headers?: HttpHeaders;\r\n        reportProgress?: boolean;\r\n        observe?: 'response';\r\n        params?: HttpParams | { [param: string]: string | string[]; };\r\n        responseType?: 'json' | 'text' | 'arraybuffer' | 'blob';\r\n        withCredentials?: boolean;\r\n    }): Observable<any> {\r\n        options.body = body;\r\n        return this.sendRequest('post', url, options);\r\n    }\r\n\r\n    delete(url: string, options?: {\r\n        body?: any;\r\n        headers?: HttpHeaders;\r\n        reportProgress?: boolean;\r\n        observe?: 'response';\r\n        params?: HttpParams | { [param: string]: string | string[]; };\r\n        responseType?: 'json' | 'text' | 'arraybuffer' | 'blob';\r\n        withCredentials?: boolean;\r\n    }): Observable<any> {\r\n        return this.sendRequest('delete', url, options);\r\n    }\r\n\r\n    patch(url: string, body: any, options?: {\r\n        body?: any;\r\n        headers?: HttpHeaders;\r\n        reportProgress?: boolean;\r\n        observe?: 'response';\r\n        params?: HttpParams | { [param: string]: string | string[]; };\r\n        responseType?: 'json' | 'text' | 'arraybuffer' | 'blob';\r\n        withCredentials?: boolean;\r\n    }): Observable<any> {\r\n        options.body = body;\r\n        return this.sendRequest('patch', url, options);\r\n    }\r\n\r\n    put(url: string, body: any, options?: {\r\n        body?: any;\r\n        headers?: HttpHeaders;\r\n        reportProgress?: boolean;\r\n        observe?: 'response';\r\n        params?: HttpParams | { [param: string]: string | string[]; };\r\n        responseType?: 'json' | 'text' | 'arraybuffer' | 'blob';\r\n        withCredentials?: boolean;\r\n    }): Observable<any> {\r\n        options.body = body;\r\n        return this.sendRequest('put', url, options);\r\n    }\r\n\r\n    head(url: string, options?: {\r\n        body?: any;\r\n        headers?: HttpHeaders;\r\n        reportProgress?: boolean;\r\n        observe?: 'response';\r\n        params?: HttpParams | { [param: string]: string | string[]; };\r\n        responseType?: 'json' | 'text' | 'arraybuffer' | 'blob';\r\n        withCredentials?: boolean;\r\n    }): Observable<any> {\r\n        return this.sendRequest('head', url, options);\r\n    }\r\n\r\n    private sendRequest(method: string, url: string, options?: {\r\n        body?: any;\r\n        headers?: HttpHeaders;\r\n        reportProgress?: boolean;\r\n        observe?: 'response';\r\n        params?: HttpParams | { [param: string]: string | string[]; };\r\n        responseType?: 'json' | 'text' | 'arraybuffer' | 'blob';\r\n        withCredentials?: boolean;\r\n    }): Observable<string> {\r\n\r\n        if (!options) {\r\n            options = {\r\n                body: null,\r\n                headers: null,\r\n                reportProgress: null,\r\n                observe: 'response',\r\n                params: null,\r\n                responseType: 'json',\r\n                withCredentials: null\r\n            };\r\n        }\r\n\r\n\r\n        const resource = this.service.GetResourceForEndpoint(url);\r\n        let authenticatedCall: Observable<string>;\r\n        if (resource) {\r\n            if (this.service.userInfo.authenticated) {\r\n                authenticatedCall = this.service.acquireToken(resource)\r\n                    .flatMap((token: string) => {\r\n                        if (options.headers == null) {\r\n                            options.headers = new HttpHeaders();\r\n                        }\r\n                        options.headers = options.headers.append('Authorization', 'Bearer ' + token);\r\n                        return this.http.request(method, url, options)\r\n                            .catch(this.handleError);\r\n                    });\r\n            } else {\r\n                authenticatedCall = Observable.throw(new Error('User Not Authenticated.'));\r\n            }\r\n        } else {\r\n            authenticatedCall = this.http.request(method, url, options).catch(this.handleError);\r\n        }\r\n\r\n        return authenticatedCall;\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        // In a real world app, we might send the error to remote logging infrastructure\r\n        const errMsg = error.message || 'Server error';\r\n        console.error(JSON.stringify(error)); // log to console instead\r\n\r\n        return Observable.throw(error);\r\n    }\r\n}\r\n",
    "import { Adal5User } from './adal5-user';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport * as adalLib from 'adal-angular';\r\nimport { adal } from 'adal-angular';\r\nimport User = adal.User;\r\n\r\n\r\n@Injectable()\r\nexport class Adal5Service {\r\n\r\n\r\n    private adalContext: adal.AuthenticationContext;\r\n\r\n\r\n    private adal5User: Adal5User = {\r\n        authenticated: false,\r\n        username: '',\r\n        error: '',\r\n        token: '',\r\n        profile: {}\r\n    };\r\n\r\n\r\n    constructor() { }\r\n\r\n\r\n    public init(configOptions: adal.Config) {\r\n        if (!configOptions) {\r\n            throw new Error('You must set config, when calling init.');\r\n        }\r\n\r\n        // redirect and logout_redirect are set to current location by default\r\n        const existingHash = window.location.hash;\r\n\r\n        let pathDefault = window.location.href;\r\n        if (existingHash) {\r\n            pathDefault = pathDefault.replace(existingHash, '');\r\n        }\r\n\r\n        configOptions.redirectUri = configOptions.redirectUri || pathDefault;\r\n        configOptions.postLogoutRedirectUri = configOptions.postLogoutRedirectUri || pathDefault;\r\n\r\n        // create instance with given config\r\n        this.adalContext = adalLib.inject(configOptions);\r\n\r\n        (window as any).AuthenticationContext = this.adalContext.constructor;\r\n\r\n        // loginresource is used to set authenticated status\r\n        this.updateDataFromCache(this.adalContext.config.loginResource);\r\n    }\r\n\r\n\r\n    public get config(): adal.Config {\r\n        return this.adalContext.config;\r\n    }\r\n\r\n\r\n    public get userInfo(): Adal5User {\r\n        return this.adal5User;\r\n    }\r\n\r\n\r\n    public login(): void {\r\n        this.adalContext.login();\r\n    }\r\n\r\n\r\n    public loginInProgress(): boolean {\r\n        return this.adalContext.loginInProgress();\r\n    }\r\n\r\n\r\n    public logOut(): void {\r\n        this.adalContext.logOut();\r\n    }\r\n\r\n\r\n    public handleWindowCallback(): void {\r\n        const hash = window.location.hash;\r\n        if (this.adalContext.isCallback(hash)) {\r\n\r\n            let context: adal.AuthenticationContext;\r\n\r\n            if (this.adalContext._openedWindows.length > 0\r\n                && this.adalContext._openedWindows[this.adalContext._openedWindows.length - 1].opener\r\n                && this.adalContext._openedWindows[this.adalContext._openedWindows.length - 1].opener._adalInstance) {\r\n                context = this.adalContext._openedWindows[this.adalContext._openedWindows.length - 1].opener._adalInstance;\r\n            } else if (window.parent && window.parent['_adalInstance']) {\r\n                context = window.parent['_adalInstance'];\r\n            } else {\r\n                context = this.adalContext;\r\n            }\r\n\r\n            const requestInfo = context.getRequestInfo(hash);\r\n\r\n            this.adalContext.saveTokenFromHash(requestInfo);\r\n            if (requestInfo.requestType === this.adalContext.REQUEST_TYPE.LOGIN) {\r\n                this.updateDataFromCache(this.adalContext.config.loginResource);\r\n\r\n            } else if (requestInfo.requestType === this.adalContext.REQUEST_TYPE.RENEW_TOKEN) {\r\n                this.adalContext.callback = (window.parent as any).callBackMappedToRenewStates[requestInfo.stateResponse];\r\n            }\r\n\r\n            if (requestInfo.stateMatch) {\r\n                if (typeof this.adalContext.callback === 'function') {\r\n                    if (requestInfo.requestType === this.adalContext.REQUEST_TYPE.RENEW_TOKEN) {\r\n                        // Idtoken or Accestoken can be renewed\r\n                        if (requestInfo.parameters['access_token']) {\r\n                            this.adalContext.callback(this.adalContext._getItem(this.adalContext.CONSTANTS.STORAGE.ERROR_DESCRIPTION)\r\n                                , requestInfo.parameters['access_token']);\r\n                        } else if (requestInfo.parameters['id_token']) {\r\n                            this.adalContext.callback(this.adalContext._getItem(this.adalContext.CONSTANTS.STORAGE.ERROR_DESCRIPTION)\r\n                                , requestInfo.parameters['id_token']);\r\n                        } else if (requestInfo.parameters['error']) {\r\n                            // tslint:disable-next-line:max-line-length\r\n                            this.adalContext.callback(this.adalContext._getItem(this.adalContext.CONSTANTS.STORAGE.ERROR_DESCRIPTION), null);\r\n                            this.adalContext._renewFailed = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Remove hash from url\r\n        if (window.location.hash) {\r\n            window.location.href = window.location.href.replace(window.location.hash, '');\r\n        }\r\n    }\r\n\r\n\r\n    public getCachedToken(resource: string): string {\r\n        return this.adalContext.getCachedToken(resource);\r\n    }\r\n\r\n\r\n    public acquireToken(resource: string) {\r\n        const _this = this;   // save outer this for inner function\r\n\r\n        let errorMessage: string;\r\n        return Observable.bindCallback(acquireTokenInternal, function (token: string) {\r\n            if (!token && errorMessage) {\r\n                throw (errorMessage);\r\n            }\r\n            return token;\r\n        })();\r\n\r\n        function acquireTokenInternal(cb: any) {\r\n            let s: string = null;\r\n\r\n            _this.adalContext.acquireToken(resource, (error: string, tokenOut: string) => {\r\n                if (error) {\r\n                    _this.adalContext.error('Error when acquiring token for resource: ' + resource, error);\r\n                    errorMessage = error;\r\n                    cb(<string>null);\r\n                } else {\r\n                    cb(tokenOut);\r\n                    s = tokenOut;\r\n                }\r\n            });\r\n            return s;\r\n        }\r\n    }\r\n\r\n\r\n    public getUser(): Observable<any> {\r\n        return Observable.bindCallback((cb: (u: adal.User) => User) => {\r\n            this.adalContext.getUser(function (error: string, user: adal.User) {\r\n                if (error) {\r\n                    this.adalContext.error('Error when getting user', error);\r\n                    cb(null);\r\n                } else {\r\n                    cb(user);\r\n                }\r\n            });\r\n        })();\r\n    }\r\n\r\n\r\n    public clearCache(): void {\r\n        this.adalContext.clearCache();\r\n    }\r\n\r\n\r\n    public clearCacheForResource(resource: string): void {\r\n        this.adalContext.clearCacheForResource(resource);\r\n    }\r\n\r\n\r\n    public info(message: string): void {\r\n        this.adalContext.info(message);\r\n    }\r\n\r\n\r\n    public verbose(message: string): void {\r\n        this.adalContext.verbose(message);\r\n    }\r\n\r\n\r\n    public GetResourceForEndpoint(url: string): string {\r\n        return this.adalContext.getResourceForEndpoint(url);\r\n    }\r\n\r\n    public refreshDataFromCache() {\r\n        this.updateDataFromCache(this.adalContext.config.loginResource);\r\n    }\r\n\r\n\r\n    private updateDataFromCache(resource: string): void {\r\n        const token = this.adalContext.getCachedToken(resource);\r\n        this.adal5User.authenticated = token !== null && token.length > 0;\r\n        const user = this.adalContext.getCachedUser() || { userName: '', profile: undefined };\r\n        if (user) {\r\n            this.adal5User.username = user.userName;\r\n            this.adal5User.profile = user.profile;\r\n            this.adal5User.token = token;\r\n            this.adal5User.error = this.adalContext.getLoginError();\r\n        } else {\r\n            this.adal5User.username = '';\r\n            this.adal5User.profile = {};\r\n            this.adal5User.token = '';\r\n            this.adal5User.error = '';\r\n        }\r\n    }\r\n}\r\n"
  ],
  "names": [
    "Observable",
    "adalLib.inject"
  ],
  "mappings": "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"
}
