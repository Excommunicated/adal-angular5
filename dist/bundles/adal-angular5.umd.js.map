{
  "version": 3,
  "file": "adal-angular5.umd.js",
  "sources": [
    "ng://adal-angular5/out/src/adal5-angular.module.ts",
    "ng://adal-angular5/out/src/adal5-http.service.ts",
    "ng://adal-angular5/out/src/adal5-user.ts",
    "ng://adal-angular5/out/src/adal5-interceptor.ts",
    "ng://adal-angular5/out/src/adal5.service.ts"
  ],
  "sourcesContent": [
    "import { Adal5Interceptor } from './adal5-interceptor';\r\nimport { Adal5User } from './adal5-user';\r\nimport { Adal5Service } from './adal5.service';\r\nimport { Adal5HTTPService } from './adal5-http.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\n@NgModule({\r\n    imports: [],\r\n    exports: [\r\n        Adal5User, Adal5Service, Adal5HTTPService, Adal5Interceptor\r\n    ],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: Adal5Interceptor, multi: true }\r\n    ],\r\n})\r\nexport class Adal5AngularModule { }\r\n",
    "import { Observable } from 'rxjs/Rx';\r\nimport { Adal5Service } from './adal5.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class Adal5HTTPService {\r\n\r\n  static factory(http: HttpClient, service: Adal5Service) {\r\n    return new Adal5HTTPService(http, service);\r\n  }\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private service: Adal5Service\r\n  ) { }\r\n\r\n  get(url: string, options: {\r\n    body?: any;\r\n    headers?: HttpHeaders;\r\n    reportProgress?: boolean;\r\n    observe: 'response';\r\n    params?: HttpParams | { [param: string]: string | string[]; };\r\n    responseType?: 'json';\r\n    withCredentials?: boolean;\r\n  }): Observable<any> {\r\n    return this.sendRequest('get', url, options);\r\n  }\r\n\r\n  post(url: string, body: any, options: {\r\n    body?: any;\r\n    headers?: HttpHeaders;\r\n    reportProgress?: boolean;\r\n    observe: 'response';\r\n    params?: HttpParams | { [param: string]: string | string[]; };\r\n    responseType?: 'json';\r\n    withCredentials?: boolean;\r\n  }): Observable<any> {\r\n    options.body = body;\r\n    return this.sendRequest('post', url, options);\r\n  }\r\n\r\n  delete(url: string, options: {\r\n    body?: any;\r\n    headers?: HttpHeaders;\r\n    reportProgress?: boolean;\r\n    observe: 'response';\r\n    params?: HttpParams | { [param: string]: string | string[]; };\r\n    responseType?: 'json';\r\n    withCredentials?: boolean;\r\n  }): Observable<any> {\r\n    return this.sendRequest('delete', url, options);\r\n  }\r\n\r\n  patch(url: string, body: any, options: {\r\n    body?: any;\r\n    headers?: HttpHeaders;\r\n    reportProgress?: boolean;\r\n    observe: 'response';\r\n    params?: HttpParams | { [param: string]: string | string[]; };\r\n    responseType?: 'json';\r\n    withCredentials?: boolean;\r\n  }): Observable<any> {\r\n    options.body = body;\r\n    return this.sendRequest('patch', url, options);\r\n  }\r\n\r\n  put(url: string, body: any, options: {\r\n    body?: any;\r\n    headers?: HttpHeaders;\r\n    reportProgress?: boolean;\r\n    observe: 'response';\r\n    params?: HttpParams | { [param: string]: string | string[]; };\r\n    responseType?: 'json';\r\n    withCredentials?: boolean;\r\n  }): Observable<any> {\r\n    options.body = body;\r\n    return this.sendRequest('put', url, options);\r\n  }\r\n\r\n  head(url: string, options: {\r\n    body?: any;\r\n    headers?: HttpHeaders;\r\n    reportProgress?: boolean;\r\n    observe: 'response';\r\n    params?: HttpParams | { [param: string]: string | string[]; };\r\n    responseType?: 'json';\r\n    withCredentials?: boolean;\r\n  }): Observable<any> {\r\n    return this.sendRequest('head', url, options);\r\n  }\r\n\r\n  private sendRequest(method: string, url: string, options: {\r\n    body?: any;\r\n    headers?: HttpHeaders;\r\n    reportProgress?: boolean;\r\n    observe: 'response';\r\n    params?: HttpParams | { [param: string]: string | string[]; };\r\n    responseType?: 'json';\r\n    withCredentials?: boolean;\r\n  }): Observable<string> {\r\n\r\n    const resource = this.service.GetResourceForEndpoint(url);\r\n    let authenticatedCall: Observable<string>;\r\n    if (resource) {\r\n      if (this.service.userInfo.authenticated) {\r\n        authenticatedCall = this.service.acquireToken(resource)\r\n          .flatMap((token: string) => {\r\n            if (options.headers == null) {\r\n              options.headers = new HttpHeaders();\r\n            }\r\n            options.headers = options.headers.append('Authorization', 'Bearer ' + token);\r\n            return this.http.request(method, url, options)\r\n              .catch(this.handleError);\r\n          });\r\n      } else {\r\n        authenticatedCall = Observable.throw(new Error('User Not Authenticated.'));\r\n      }\r\n    } else {\r\n      authenticatedCall = this.http.request(method, url, options).catch(this.handleError);\r\n    }\r\n\r\n    return authenticatedCall;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    // In a real world app, we might send the error to remote logging infrastructure\r\n    const errMsg = error.message || 'Server error';\r\n    console.error(JSON.stringify(error)); // log to console instead\r\n\r\n    return Observable.throw(error);\r\n  }\r\n}\r\n",
    "export class Adal5User {\r\n    authenticated: boolean;\r\n    username: string;\r\n    error: string;\r\n    profile: any;\r\n    token: string;\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Adal5Service } from './adal5.service';\r\n\r\n@Injectable()\r\nexport class Adal5Interceptor implements HttpInterceptor {\r\n    constructor(public adal5Service: Adal5Service) { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        request = request.clone({\r\n            setHeaders: {\r\n                Authorization: `Bearer ${this.adal5Service.userInfo.token}`\r\n            }\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}\r\n",
    "import * as adalLib from 'adal-angular';\r\nimport { adal } from 'adal-angular';\r\nimport { Adal5User } from './adal5-user';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\nimport User = adal.User;\r\n\r\n\r\n@Injectable()\r\nexport class Adal5Service {\r\n\r\n\r\n  private adalContext: adal.AuthenticationContext;\r\n\r\n\r\n  private adal5User: Adal5User = {\r\n    authenticated: false,\r\n    username: '',\r\n    error: '',\r\n    token: '',\r\n    profile: {}\r\n  };\r\n\r\n\r\n  constructor() { }\r\n\r\n\r\n  public init(configOptions: adal.Config) {\r\n    if (!configOptions) {\r\n      throw new Error('You must set config, when calling init.');\r\n    }\r\n\r\n    // redirect and logout_redirect are set to current location by default\r\n    const existingHash = window.location.hash;\r\n\r\n    let pathDefault = window.location.href;\r\n    if (existingHash) {\r\n      pathDefault = pathDefault.replace(existingHash, '');\r\n    }\r\n\r\n    configOptions.redirectUri = configOptions.redirectUri || pathDefault;\r\n    configOptions.postLogoutRedirectUri = configOptions.postLogoutRedirectUri || pathDefault;\r\n\r\n    // create instance with given config\r\n    this.adalContext = adalLib.inject(configOptions);\r\n\r\n    (window as any).AuthenticationContext = this.adalContext.constructor;\r\n\r\n    // loginresource is used to set authenticated status\r\n    this.updateDataFromCache(this.adalContext.config.loginResource);\r\n  }\r\n\r\n\r\n  public get config(): adal.Config {\r\n    return this.adalContext.config;\r\n  }\r\n\r\n\r\n  public get userInfo(): Adal5User {\r\n    return this.adal5User;\r\n  }\r\n\r\n\r\n  public login(): void {\r\n    this.adalContext.login();\r\n  }\r\n\r\n\r\n  public loginInProgress(): boolean {\r\n    return this.adalContext.loginInProgress();\r\n  }\r\n\r\n\r\n  public logOut(): void {\r\n    this.adalContext.logOut();\r\n  }\r\n\r\n\r\n  public handleWindowCallback(): void {\r\n    const hash = window.location.hash;\r\n    if (this.adalContext.isCallback(hash)) {\r\n      const requestInfo = this.adalContext.getRequestInfo(hash);\r\n      this.adalContext.saveTokenFromHash(requestInfo);\r\n      if (requestInfo.requestType === this.adalContext.REQUEST_TYPE.LOGIN) {\r\n        this.updateDataFromCache(this.adalContext.config.loginResource);\r\n\r\n      } else if (requestInfo.requestType === this.adalContext.REQUEST_TYPE.RENEW_TOKEN) {\r\n        this.adalContext.callback = (window.parent as any).callBackMappedToRenewStates[requestInfo.stateResponse];\r\n      }\r\n\r\n      if (requestInfo.stateMatch) {\r\n        if (typeof this.adalContext.callback === 'function') {\r\n          if (requestInfo.requestType === this.adalContext.REQUEST_TYPE.RENEW_TOKEN) {\r\n            // Idtoken or Accestoken can be renewed\r\n            if (requestInfo.parameters['access_token']) {\r\n              this.adalContext.callback(this.adalContext._getItem(this.adalContext.CONSTANTS.STORAGE.ERROR_DESCRIPTION)\r\n                , requestInfo.parameters['access_token']);\r\n            } else if (requestInfo.parameters['error']) {\r\n              this.adalContext.callback(this.adalContext._getItem(this.adalContext.CONSTANTS.STORAGE.ERROR_DESCRIPTION), null);\r\n              this.adalContext._renewFailed = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove hash from url\r\n    if (window.location.hash) {\r\n      window.location.href = window.location.href.replace(window.location.hash, '');\r\n    }\r\n  }\r\n\r\n\r\n  public getCachedToken(resource: string): string {\r\n    return this.adalContext.getCachedToken(resource);\r\n  }\r\n\r\n\r\n  public acquireToken(resource: string) {\r\n    const _this = this;   // save outer this for inner function\r\n\r\n    let errorMessage: string;\r\n    return Observable.bindCallback(acquireTokenInternal, function (token: string) {\r\n      if (!token && errorMessage) {\r\n        throw (errorMessage);\r\n      }\r\n      return token;\r\n    })();\r\n\r\n    function acquireTokenInternal(cb: any) {\r\n      let s: string = null;\r\n\r\n      _this.adalContext.acquireToken(resource, (error: string, tokenOut: string) => {\r\n        if (error) {\r\n          _this.adalContext.error('Error when acquiring token for resource: ' + resource, error);\r\n          errorMessage = error;\r\n          cb(<string>null);\r\n        } else {\r\n          cb(tokenOut);\r\n          s = tokenOut;\r\n        }\r\n      });\r\n      return s;\r\n    }\r\n  }\r\n\r\n\r\n  public getUser(): Observable<any> {\r\n    return Observable.bindCallback((cb: (u: adal.User) => User) => {\r\n      this.adalContext.getUser(function (error: string, user: adal.User) {\r\n        if (error) {\r\n          this.adalContext.error('Error when getting user', error);\r\n          cb(null);\r\n        } else {\r\n          cb(user);\r\n        }\r\n      });\r\n    })();\r\n  }\r\n\r\n\r\n  public clearCache(): void {\r\n    this.adalContext.clearCache();\r\n  }\r\n\r\n\r\n  public clearCacheForResource(resource: string): void {\r\n    this.adalContext.clearCacheForResource(resource);\r\n  }\r\n\r\n\r\n  public info(message: string): void {\r\n    this.adalContext.info(message);\r\n  }\r\n\r\n\r\n  public verbose(message: string): void {\r\n    this.adalContext.verbose(message);\r\n  }\r\n\r\n\r\n  public GetResourceForEndpoint(url: string): string {\r\n    return this.adalContext.getResourceForEndpoint(url);\r\n  }\r\n\r\n  public refreshDataFromCache() {\r\n    this.updateDataFromCache(this.adalContext.config.loginResource);\r\n  }\r\n\r\n\r\n  private updateDataFromCache(resource: string): void {\r\n    const token = this.adalContext.getCachedToken(resource);\r\n    this.adal5User.authenticated = token !== null && token.length > 0;\r\n    const user = this.adalContext.getCachedUser() || { userName: '', profile: undefined };\r\n    if (user) {\r\n      this.adal5User.username = user.userName;\r\n      this.adal5User.profile = user.profile;\r\n      this.adal5User.token = token;\r\n      this.adal5User.error = this.adalContext.getLoginError();\r\n    } else {\r\n      this.adal5User.username = '';\r\n      this.adal5User.profile = {};\r\n      this.adal5User.token = '';\r\n      this.adal5User.error = '';\r\n    }\r\n  };\r\n}\r\n"
  ],
  "names": [
    "HTTP_INTERCEPTORS",
    "NgModule",
    "HttpClient",
    "Injectable",
    "Observable",
    "HttpHeaders",
    "http",
    "adalLib.inject"
  ],
  "mappings": "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"
}
